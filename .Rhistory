usethis::use_testthat()
?usethis::use_description_defaults()
usethis::use_description_defaults()
usethis::use_description()
use_r("load")
library(usethis)
use_r("load")
use_test()
# Create sample data
df <- tibble::tibble(x = 1, y = 2)
path_csv <- tempfile()
path_tsv <- tempfile()
write.csv(df, path_csv, row.names = FALSE)
write.table(df, path_tsv, sep = "\t", row.names = FALSE)
# Key expectations
expect_equal(load_file("test.csv", path_csv), df)
devtools::load_all()
usethis::use_description()
?vroom::vroom()
vroom::vroom_example()
vroom::vroom_examples()
readr::readr_example()
readr::readr_example("mtcars.csv")
vroom::vroom_examples()
vroom::vroom_example("mtcars.csv")
tor::tor_example()
tor::tor_example("csv")
testthat::test_example()
testthat::test_examples()
rio
install.packages("rio")
fgeo.data
fgeo.x
install.packages("fgeo.x")
fgeo.x::example_path()
fgeo.x::example_path("csv")
tor::tor_example()
tor::tor_example("rdata")
tor::tor_example("rdata")
path_rda <- tor::tor_example("rdata")
(path_rda <- tor::tor_example("rdata"))
tor::list_rdata(path_rda)
path_rda
fs::is_dir(path_rda)
fs::is_file(path_rda)
(path_rda <- tor::tor_example("rdata"))
fs::is_dir(path_rda)
fs::is_file(path_rda)
tor::list_rdata(path_rda)
devtools::load_all(".")
si <- function() {
message("* Copy from console:")
cat(sep = "\n",
"<details>",
"```{r}",
"devtools::session_info()",
"```",
"</details>"
)
}
si()
x <- si()
x
expect_snapshot(si())
snapshot_accept('si')
use_r("myplot")
iris
library(tibble)
as_tibble(iris)
as_tibble(iris)
use_r("plot_iris")
use_package("ggplot2")
#' @import ggplot2
plot_iris <- function(data) {
}
iris
penguins
install.packages("penguins")
install.packages("pkgsearch")
devtools::load_all(".")
install.packages("palmerpenguins")
devtools::load_all(".")
#' @import ggplot2
plot_penguins <- function(data) {
ggplot(data)
}
devtools::load_all(".")
palmerpenguins::path_to_file()
palmerpenguins::path_to_file("penguins.cs")
palmerpenguins::penguins
use_package("palmerpenguins", "suggests")
data <- palmerpenguins::penguins
plot_penguins(data)
#'
#' Bill length and depth for Adelie, Chinstrap and Gentoo Penguins at Palmer
#' Station LTER (https://allisonhorst.github.io/palmerpenguins).
#'
#' @param pengins Data frame structured as [palmerpenguins::penguins].
#' @import ggplot2
#' @export
#' @examples
#' data <- palmerpenguins::penguins
#' plot_penguins(data)
plot_penguins <- function(pengins) {
ggplot(data = pengins, aes(x = bill_length_mm, y = bill_depth_mm)) +
geom_point(aes(color = species)) +
geom_smooth(method = "lm") +
labs(
title = "Penguin bill dimensions",
subtitle = "Bill length and depth for Adelie, Chinstrap and Gentoo Penguins at Palmer Station LTER",
x = "Bill length (mm)",
y = "Bill depth (mm)",
color = "Penguin species",
shape = "Penguin species"
)
}
data <- palmerpenguins::penguins
plot_penguins(data)
devtools::load_all(".")
data <- palmerpenguins::penguins
plot_penguins(data)
devtools::load_all(".")
devtools::load_all(".")
#'
#' Bill length and depth for Adelie, Chinstrap and Gentoo Penguins at Palmer
#' Station LTER (https://allisonhorst.github.io/palmerpenguins).
#'
#' @param pengins Data frame structured as [palmerpenguins::penguins].
#' @import ggplot2
#' @export
#' @examples
#' data <- palmerpenguins::penguins
#' plot_penguins(data)
plot_penguins <- function(pengins) {
ggplot(data = pengins, aes(x = bill_length_mm, y = bill_depth_mm)) +
geom_point(aes(color = species)) +
geom_smooth(method = "lm") +
labs(
title = "Penguin bill dimensions",
subtitle = "Bill length and depth for Adelie, Chinstrap and Gentoo Penguins at Palmer Station LTER",
x = "Bill length (mm)",
y = "Bill depth (mm)",
color = "Penguin species",
shape = "Penguin species"
)
}
data <- palmerpenguins::penguins
plot_penguins(data)
devtools::load_all(".")
use_r("imports")
document()
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
data <- palmerpenguins::penguins
plot_penguins(data)
#' Penguin bill dimensions
#'
#' Bill length and depth for Adelie, Chinstrap and Gentoo Penguins at Palmer
#' Station LTER (https://allisonhorst.github.io/palmerpenguins).
#'
#' @param pengins Data frame structured as [palmerpenguins::penguins].
#' @export
#' @examples
#' data <- palmerpenguins::penguins
#' plot_penguins(data)
plot_penguins <- function(pengins) {
ggplot(data = pengins, aes(x = bill_length_mm, y = bill_depth_mm, group = species)) +
geom_point(aes(color = species)) +
geom_smooth(method = "lm") +
labs(
title = "Penguin bill dimensions",
subtitle = "Bill length and depth for Adelie, Chinstrap and Gentoo Penguins at Palmer Station LTER",
x = "Bill length (mm)",
y = "Bill depth (mm)",
color = "Penguin species",
shape = "Penguin species"
)
}
data <- palmerpenguins::penguins
plot_penguins(data)
#' Penguin bill dimensions
#'
#' Bill length and depth for Adelie, Chinstrap and Gentoo Penguins at Palmer
#' Station LTER (https://allisonhorst.github.io/palmerpenguins).
#'
#' @param pengins Data frame structured as [palmerpenguins::penguins].
#' @export
#' @examples
#' data <- palmerpenguins::penguins
#' plot_penguins(data)
plot_penguins <- function(pengins) {
ggplot(data = pengins, aes(x = bill_length_mm, y = bill_depth_mm, color = species)) +
geom_point() +
geom_smooth() +
labs(
title = "Penguin bill dimensions",
subtitle = "Bill length and depth for Adelie, Chinstrap and Gentoo Penguins at Palmer Station LTER",
x = "Bill length (mm)",
y = "Bill depth (mm)",
color = "Penguin species",
shape = "Penguin species"
)
}
data <- palmerpenguins::penguins
plot_penguins(data)
#' Penguin bill dimensions
#'
#' Bill length and depth for Adelie, Chinstrap and Gentoo Penguins at Palmer
#' Station LTER (https://allisonhorst.github.io/palmerpenguins).
#'
#' @param pengins Data frame structured as [palmerpenguins::penguins].
#' @export
#' @examples
#' data <- palmerpenguins::penguins
#' plot_penguins(data)
plot_penguins <- function(pengins) {
ggplot(data = pengins, aes(x = bill_length_mm, y = bill_depth_mm, color = species)) +
geom_point() +
geom_smooth(method = "lm") +
labs(
title = "Penguin bill dimensions",
subtitle = "Bill length and depth for Adelie, Chinstrap and Gentoo Penguins at Palmer Station LTER",
x = "Bill length (mm)",
y = "Bill depth (mm)",
color = "Penguin species",
shape = "Penguin species"
)
}
#' Penguin bill dimensions
#'
#' Bill length and depth for Adelie, Chinstrap and Gentoo Penguins at Palmer
#' Station LTER (https://allisonhorst.github.io/palmerpenguins).
#'
#' @param pengins Data frame structured as [palmerpenguins::penguins].
#' @export
#' @examples
#' data <- palmerpenguins::penguins
#' plot_penguins(data)
plot_penguins <- function(pengins) {
p <- ggplot(data = pengins, aes(x = bill_length_mm, y = bill_depth_mm, color = species)) +
geom_point() +
geom_smooth(method = "lm")
p +
labs(
title = "Penguin bill dimensions",
subtitle = "Bill length and depth for Adelie, Chinstrap and Gentoo Penguins at Palmer Station LTER",
x = "Bill length (mm)",
y = "Bill depth (mm)",
color = "Penguin species",
shape = "Penguin species"
)
}
devtools::load_all(".")
data <- palmerpenguins::penguins
plot_penguins(data)
devtools::load_all(".")
data <- palmerpenguins::penguins
plot_penguins(data)
devtools::load_all(".")
data <- palmerpenguins::penguins
plot_penguins(data)
devtools::load_all(".")
data <- palmerpenguins::penguins
plot_penguins(data)
devtools::load_all(".")
data <- palmerpenguins::penguins
plot_penguins(data)
devtools::load_all(".")
data <- palmerpenguins::penguins
plot_penguins(data)
devtools::load_all(".")
data <- palmerpenguins::penguins
plot_penguins(data)
devtools::load_all(".")
devtools::load_all(".")
data <- palmerpenguins::penguins
scatterplot_penguins(data)
scatterplot_penguins(head(data))
scatterplot_penguins(na.ommit(data))
scatterplot_penguins(na.omit(data))
data <- na.omit(palmerpenguins::penguins)
scatterplot_penguins()
devtools::load_all(".")
data <- na.omit(palmerpenguins::penguins)
scatterplot_penguins()
data <- palmerpenguins::penguins
scatterplot_penguins(data)
devtools::load_all(".")
devtools::load_all(".")
document()
devtools::load_all(".")
document()
devtools::load_all(".")
data <- palmerpenguins::penguins
scatterplot_penguins(data)
scatterplot_penguins(data, remove_na TRUE)
scatterplot_penguins(data, remove_na = TRUE)
devtools::load_all(".")
data <- palmerpenguins::penguins
scatterplot_penguins(data)
scatterplot_penguins(data, remove_na = TRUE)
data <- palmerpenguins::penguins
scatterplot_penguins(data)
devtools::load_all(".")
scatterplot_penguins(data, remove_na = TRUE)
devtools::load_all(".")
data <- palmerpenguins::penguins
devtools::load_all(".")
scatterplot_penguins(data)
scatterplot_penguins(data, remove_na = TRUE)
devtools::load_all(".")
data <- palmerpenguins::penguins
scatterplot_penguins(data)
scatterplot_penguins(data, remove_na = TRUE)
devtools::load_all(".")
run_examples()
usethis::rename_files("plot_iris", "scatterplot_penguins")
data <- na.omit(palmerpenguins::penguins)
scatterplot_penguins(data)
use_package("stats", "suggests")
document()
styler:::style_active_file()
document()
devtools::load_all(".")
use_test()
data <- na.omit(palmerpenguins::penguins)
out <- scatterplot_penguins(data)
p <- scatterplot_penguins(data)
str(p)
p$plot_env <- NULL
str(p)
styler:::style_active_file()
document()
snapshot_accept("man/scatterplot_penguins")
use_package("rlang")
#' Scatterplot bill dimensions of penguins
#'
#' Bill length and depth for Adelie, Chinstrap and Gentoo Penguins at Palmer
#' Station LTER (https://allisonhorst.github.io/palmerpenguins).
#'
#' @param data Data frame structured as [palmerpenguins::penguins].
#' @export
#' @examples
#' data <- na.omit(palmerpenguins::penguins)
#' p <- scatterplot_penguins(data)
#' p + penguin_labs()
scatterplot_penguins <- function(data) {
ggplot(data = data) +
geom_point(aes(x = bill_length_mm, y = bill_depth_mm, color = species))
}
#' @export
#' @rdname scatterplot_penguins
#' @importFrom rlang %||%
penguin_labs <- function(title = NULL, subtitle = NULL, x = NULL, y = NULL, color = NULL, shape = NULL) {
labs(
title = title %||% "Penguin bill dimensions",
x = "Bill length (mm)",
y = "Bill depth (mm)"
)
}
devtools::load_all(".")
devtools::load_all(".")
data <- na.omit(palmerpenguins::penguins)
p <- scatterplot_penguins(data)
p + penguin_labs()
devtools::load_all(".")
document()
devtools::load_all(".")
data <- na.omit(palmerpenguins::penguins)
p <- scatterplot_penguins(data)
p + penguin_labs()
p + penguin_labs(title = "Custom")
styler:::style_active_pkg()
styler:::style_active_file()
devtools::load_all(".")
?scatterplot_penguins
?penguin_labs()
document
document()
?penguin_labs()
document()
document()
devtools::load_all(".")
data <- na.omit(palmerpenguins::penguins)
p <- scatterplot_penguins(data)
p + penguin_labs()
p + penguin_labs(title = "Custom title", x = "Custom x")
document()
devtools::load_all(".")
?penguin_labs
devtools::load_all(".")
?penguin_labs
document()
devtools::load_all(".")
?penguin_labs
data <- na.omit(palmerpenguins::penguins)
p <- scatterplot_penguins(data)
p + penguin_labs()
p + penguin_labs(title = "Custom")
data <- na.omit(palmerpenguins::penguins)
p <- scatterplot_penguins(data)
p + penguin_labs()
devtools::load_all(".")
document()
devtools::load_all(".")
document()
data <- na.omit(palmerpenguins::penguins)
p <- scatterplot_penguins(data)
p + penguin_labs()
devtools::load_all(".")
data <- na.omit(palmerpenguins::penguins)
p <- scatterplot_penguins(data)
data <- na.omit(palmerpenguins::penguins)
p <- scatterplot_penguins(data)
p
devtools::load_all(".")
data <- na.omit(palmerpenguins::penguins)
p <- scatterplot_penguins(data)
p
use_test()
data <- na.omit(palmerpenguins::penguins)
p <- scatterplot_penguins(data)
p
str(p)
View(p)
data <- na.omit(palmerpenguins::penguins)
p <- scatterplot_penguins(data)
str(p)
View(p)
data <- na.omit(palmerpenguins::penguins)
p <- scatterplot_penguins(data)
p$plot_env <- NULL
str(p)
View(p)
str(p)
styler:::style_active_file()
devtools::load_all(".")
data <- na.omit(palmerpenguins::penguins)
p <- scatterplot_penguins(data)
p
snapshot_accept('scatterplot_penguins')
devtools::load_all(".")
data <- na.omit(palmerpenguins::penguins)
p <- scatterplot_penguins(data)
p
p + penguins_labs()
use_package("rlang")
document()
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
document()
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
data <- na.omit(palmerpenguins::penguins)
p <- scatterplot_penguins(data)
p
p + penguins_labs()
p + penguins_labs(title = "Custom title")
vroom::vroom("x\na")
vroom::vroom("x\na", delim = ",")
readr::read_csv("x\n1")
readr::read_csv("x, 1")
readr::read_csv("x\n1L")
readr::read_csv("x\n1L")
vroom::vroom("x\n1L")
vroom::vroom("x\n1L", delim = ",")
vroom::vroom("x\n1L", delim = ",")
vroom::spec()
vroom::vroom("x\n1L", delim = ",")
vroom::spec()
vroom::vroom_examples()
vroom::vroom_example("mtcars.csv")
path <- vroom::vroom_example("mtcars.csv")
vroom::vroom(path)
vroom::spec()
path <- vroom::vroom_example("mtcars.csv")
vroom::vroom(path)
vroom::spec()
path <- vroom::vroom_example("mtcars.csv")
data <- vroom::vroom(path)
path <- vroom::vroom_example("mtcars.csv")
data <- vroom::vroom(path)
vroom::spec(data)
# Show spec
vroom::spec(data)
path <- vroom::vroom_example("mtcars.csv")
# Guess spec
data <- vroom::vroom(path)
# Show spec to the user in a way it's easy for them to adapt
vroom::spec(data)
spec <- cols(
model = col_character(),
mpg = col_double(),
cyl = col_double(),
disp = col_double(),
hp = col_double(),
drat = col_double(),
wt = col_double(),
qsec = col_double(),
vs = col_double(),
am = col_double(),
gear = col_double(),
carb = col_double()
)
vroom::vroom(path, spec = spec)
vroom::vroom(path, col_types = spec)
path <- vroom::vroom_example("mtcars.csv")
# Guess spec
data <- vroom::vroom(path)
# Show spec to the user in a way it's easy for them to adapt
vroom::spec(data)
spec <- cols(
model = col_character(),
mpg = col_double(),
cyl = col_double(),
disp = col_double(),
hp = col_double(),
drat = col_double(),
wt = col_double(),
qsec = col_double(),
vs = col_double(),
am = col_double(),
gear = col_double(),
carb = col_double()
)
vroom::vroom(path, col_types = spec)
library(vroom)
library(vroom)
path <- vroom_example("mtcars.csv")
# Guess spec
data <- vroom(path)
# Show spec to the user in a way it's easy for them to adapt
spec(data)
spec <- cols(
model = col_character(),
mpg = col_double(),
cyl = col_double(),
disp = col_double(),
hp = col_double(),
drat = col_double(),
wt = col_double(),
qsec = col_double(),
vs = col_double(),
am = col_double(),
gear = col_double(),
carb = col_double()
)
vroom(path, col_types = spec)
library(ggplot2)
my_theme <- function(size, ...) {
ggplot2::theme(element_text(size = size), ...)
}
my_theme()
my_theme <- function(size = 12, ...) {
ggplot2::theme(element_text(size = size), ...)
}
my_theme()
ggplot(mtcars) +
geom_histogram(aes(disp))
ggplot(mtcars) +
geom_histogram(aes(disp)) +
my_theme()
ggplot(mtcars) +
geom_histogram(aes(disp)) +
my_theme()
ggplot(mtcars) +
geom_histogram(aes(disp)) +
my_theme()
my_theme <- function(size = 12, ...) {
ggplot2::theme(text = element_text(size = size), ...)
}
ggplot(mtcars) +
geom_histogram(aes(disp)) +
my_theme()
ggplot(mtcars) +
geom_histogram(aes(disp), bins = 10) +
my_theme()
ggplot(mtcars) +
geom_histogram(aes(disp), bins = 10) +
my_theme(text = element_text(colour = "blue"))
library(ggplot2)
my_theme <- function(size = 12, ...) {
ggplot2::theme(text = element_text(size = size), ...)
}
ggplot(mtcars) +
geom_histogram(aes(disp), bins = 10) +
my_theme(text = element_text(colour = "blue"))
library(ggplot2)
my_theme <- function(size = 12, ...) {
ggplot2::theme(text = element_text(size = size, ...))
}
ggplot(mtcars) +
geom_histogram(aes(disp), bins = 10) +
my_theme(colour = "blue")
p <- ggplot(mtcars) + geom_histogram(aes(disp), bins = 10)
library(ggplot2)
my_theme <- function(size = 12, ...) {
ggplot2::theme(text = element_text(size = size, ...))
}
p <- ggplot(mtcars) + geom_histogram(aes(disp), bins = 10)
# Use all defaults
p + my_theme()
# Use explicit argument
p + my_theme(size = 40)
# Use argument passed via ... to element_text()
p + my_theme(color = "blue")
